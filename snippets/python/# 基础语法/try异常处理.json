{
  "try:正常执行 except:异常处理": {
    "prefix": ["try except =-try", "try e=-try", "try exc=-try"],
    "body": [
      "try:",
      "    $0",
      "    ...",
      "except Exception as error:",
      "    # ! Exception: 所有异常的基类, 如需对指定类型的异常进行处理, 在上方添加 except [指定异常类型] 即可",
      "    # logging.error(f'错误类型:{type(error)}')",
      "    # logging.error(f'错误信息:{error}')",
      "    print(f'错误类型:{type(error)}')",
      "    print(f'错误信息:{error}')",
      "    ...",
      "    raise error  # raise: 抛出异常, 程序终止 (如果注释掉, 则程序继续执行, 正常退出)"
    ],
    "description": ["try:正常执行 except:异常处理"]
  },
  "except 抛出异常": {
    "prefix": ["except error =-try", "e =-try", "exc =-try"],
    "body": [
      "except Exception as error:",
      "    # ! Exception: 所有异常的基类, 如需对指定类型的异常进行处理, 在上方添加 except [指定异常类型] 即可",
      "    # logging.error(f'错误类型:{type(error)}')",
      "    # logging.error(f'错误信息:{error}')",
      "    print(f'错误类型:{type(error)}')",
      "    print(f'错误信息:{error}')",
      "    ...",
      "    raise error  # raise: 抛出异常, 程序终止 (如果注释掉, 则程序继续执行, 正常退出)",
      ""
    ],
    "description": ["except 抛出异常"]
  },
  "except 异常处理": {
    "prefix": ["except -try", "except as e -try", "e -try", "exc -try"],
    "body": [
      "except ${1:Exception} as error:",
      "    # ! Exception: 所有异常的基类, 如需对指定类型的异常进行处理, 在上方添加 except [指定异常类型] 即可",
      "    ..."
    ],
    "description": ["except 异常处理"]
  },
  "try:正常执行 finally:强制执行": {
    "prefix": ["try finally =-try"],
    "body": [
      "try:",
      "    # * 正常执行",
      "    $0",
      "    ...",
      "finally:",
      "    # TODO 仅支持: raise 语句",
      "    print(\"强制执行\")",
      "    ...",
      "    # raise",
      ""
    ],
    "description": ["try:正常执行 finally:强制执行"]
  },
  "try:正常执行 except:异常处理 else:try之后执行 finally:强制执行": {
    "prefix": [
      "try except else finally =-try",
      "try e else finally =-try",
      "try exc else finally =-try"
    ],
    "body": [
      "try:",
      "    # * 正常执行",
      "    $0",
      "    ...",
      "except Exception as error:",
      "    # ! Exception: 所有异常的基类, 如需对指定类型的异常进行处理, 在上方添加 except [指定异常类型] 即可",
      "    # logging.error(f'错误类型:{type(error)}')",
      "    # logging.error(f'错误信息:{error}')",
      "    print(f'错误类型:{type(error)}')",
      "    print(f'错误信息:{error}')",
      "    ...",
      "    raise error   # raise: 抛出异常, 程序终止 (如果注释掉, 则程序继续执行, 正常退出)",
      "else:",
      "    # * 运行正常时执行",
      "    ...",
      "finally:",
      "    # TODO 仅支持: raise 语句",
      "    print(\"强制执行\")",
      "    ...",
      "    # raise",
      ""
    ],
    "description": [
      "try:正常执行 except:异常处理 else:try之后执行 finally:强制执行 "
    ]
  }
}
